@using ApotekaShop.Services.Models
@using ApotekaShop.Web.Helpers
@model ApotekaShop.Web.Models.ProductDetailsViewModel
@{
    ViewBag.Title = "Search";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string[] orderBy = new string[] { "", "price", "size" };
    string[] order = new string[] { "", "ASC", "DESC" };
}

@using (Html.BeginForm("Search", "ProductDetails", FormMethod.Get))
{
    <div class="panel panel-primary">
        <div class="panel-heading">Search</div>
        <div class="panel-body">
            <div class="row">
                <div class="col-md-12">
                    <div id="custom-search-input">
                        <div class="input-group">
                            @Html.TextBox("query", Model.Filters.Query, new {@class = "form-control input-lg"})
                            <span class="input-group-btn">
                                <button class="btn btn-info btn-lg" type="submit">
                                    <i class="glyphicon glyphicon-search"></i> Search
                                </button>
                            </span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row filters">
                <div class="col-sm-2">
                    <label class="control-label">Min price:</label> @Html.TextBox("minPrice", Model.Filters.MinPrice, new {@class = "form-control input-sm"})
                </div>
                <div class="col-sm-2">
                    <label class="control-label">Max price:</label> @Html.TextBox("maxPrice", Model.Filters.MaxPrice, new {@class = "form-control input-sm"})
                </div>
                <div class="col-sm-2">
                    <label class="control-label">Order By:</label> @Html.DropDownList("orderBy", new SelectList(orderBy, Model.Filters.OrderBy), new
                                                              {
                                                                  onchange = "this.form.submit();",
                                                                  @class = "form-control input-sm"
                                                              })
                </div>
                <div class="col-sm-2">
                    <label class="control-label">Order:</label> @Html.DropDownList("order", new SelectList(order, Model.Filters.Order), new
                                                           {
                                                               onchange = "this.form.submit();",
                                                               @class = "form-control input-sm"
                                                           })
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-2">
            <p>Found: @Model.Total results</p>
        </div>
    </div>
}

<div class="row products">
    @foreach (var product in Model.Products)
    {
        <div class="col-md-3">
            <div class="thumbnail">
                <img src="http://placehold.it/200x200" alt="">
                <div class="caption">
                    <a href="@Url.Action("Details", new {id = product.PackageId})"><h3>@product.ProductNames.FirstOrDefault().Name</h3></a>
                    <p>Price:@Html.Currency(product.NormalizedPrice)</p>
                    <p>Size @product.NormalizedPackageSize.ToString("N2")</p>

                    <p><a href="#" data-id ="@product.PackageId" class="btn btn-primary addToCard" role="button">Add to card</a> </p>
                </div>
            </div>
        </div>
    }
</div>

<ul class="pagination">
    @for (var i = 0; i < Model.PageCount; i++)
    {
        if (i < 10)
        {
            <li>
                @PageLink(i + 1)
            </li>
        }
    }
</ul>

@helper PageLink(int page)
{
    var filter = Model.Filters;

    filter.PageNumber = page;

    var routeParms = new RouteValueDictionary(filter.GetType().GetProperties().ToDictionary(p => p.Name, p => p.GetValue(Model.Filters, null)));

    @Html.ActionLink((page).ToString(), "Search", routeParms)
}

