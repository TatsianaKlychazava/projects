@using ApotekaShop.Services.Helpers
@using ApotekaShop.Web.Helpers
@using Resources
@model ApotekaShop.Web.Models.ProductDetailsViewModel
@{
    ViewBag.Title = "Search";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string[] orderBy = new string[] { "", "price", "size" };
    string[] order = new string[] { "", "ASC", "DESC" };
}

@using (Html.BeginForm("Search", "ProductDetails", FormMethod.Get))
{
    <div class="panel panel-primary panel-search">
        <div class="panel-heading">Search</div>
        <div class="panel-body">
            <div class="row">
                <div class="col-md-12">
                    <div id="custom-search-input">
                        <div class="input-group">
                            @Html.TextBox("query", Model.Filters.Query, new { @class = "form-control input-lg" })
                            <span class="input-group-btn">
                                <button class="btn btn-info btn-lg" type="submit">
                                    <i class="glyphicon glyphicon-search"></i> Search
                                </button>
                            </span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row filters">
                <div class="col-sm-2 col-xs-6">
                    <label class="control-label">Min price (@ShopResources.CurrencyName):</label> @Html.TextBox("minPrice", Model.Filters.MinPrice, new { @class = "form-control input-sm" })
                </div>
                <div class="col-sm-2 col-xs-6">
                    <label class="control-label">Max price (@ShopResources.CurrencyName):</label> @Html.TextBox("maxPrice", Model.Filters.MaxPrice, new { @class = "form-control input-sm" })
                </div>
                <div class="col-sm-2 col-xs-12">
                    <label class="control-label">Order By:</label> @Html.DropDownList("orderBy", new SelectList(orderBy, Model.Filters.OrderBy), new
                                                              {
                                                                  onchange = "this.form.submit();",
                                                                  @class = "form-control input-sm"
                                                              })
                </div>
                <div class="col-sm-2 col-xs-12">
                    <label class="control-label">Order:</label> @Html.DropDownList("order", new SelectList(order, Model.Filters.Order), new
                                                           {
                                                               onchange = "this.form.submit();",
                                                               @class = "form-control input-sm"
                                                           })
                </div>
            </div>
        </div>
        <div class="panel-footer">
           Found: <b>@Model.Total</b> results
        </div>
    </div>
}

<p>
<form class="form-inline">
    <div class="form-group">
        <p class="form-control-static">Show</p>
    </div>
    <div class="form-group">
        <select class="form-control input-sm" placeholder="Amount">
            <option>12</option>
        </select>
    </div>
    <div class="form-group">
        <p class="form-control-static">products per page</p>
    </div>
</form>
</p>

<div class="row products">
    @foreach (var product in Model.Products)
    {
        <div class="col-md-3">
            <div class="thumbnail">
                <img src="http://placehold.it/200x200" alt="">
                <hr/>
                <div class="caption">
                    <a href="@Url.Action("Details", new {id = product.PackageId})" title="@product.ProductNames.GetAllProductNames()"><h3 class="text-hidden-overflow">{{ '@product.ProductNames.GetFirstProductName()' | capitalize }}</h3></a>
                    <p>Price: @Html.Currency(product.NormalizedPrice)</p>
                    <p>Size: @product.NormalizedPackageSize.ToString("N2")</p>

                    <p><a href="#" ng-click="addOrder(@product.PackageId, $event)" class="btn btn-primary">Add to card</a> </p>
                </div>
            </div>
        </div>
    }
</div>

<ul class="pagination">
    @for (var i = 0; i < Model.PageCount; i++)
    {
        if (i < 10)
        {
            <li>
                @PageLink(i + 1)
            </li>
        }
    }
</ul>

@helper PageLink(int page)
{
var filter = Model.Filters;

filter.PageNumber = page;

var routeParms = new RouteValueDictionary(filter.GetType().GetProperties().ToDictionary(p => p.Name, p => p.GetValue(Model.Filters, null)));

    @Html.ActionLink((page).ToString(), "Search", routeParms)
}

