@using System.Globalization
@using ApotekaShop.Services.Helpers
@using ApotekaShop.Web.Helpers
@using Resources
@model ApotekaShop.Web.Models.ProductDetailsViewModel
@{
    ViewBag.Title = "Search";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string[] orderBy = new string[] { "", "price", "size" };
    string[] order = new string[] { "", "ASC", "DESC" };
    int[] itemsPerPage = new int[] { 12, 24, 36 };
}

@using (Html.BeginForm("Search", "ProductDetails", FormMethod.Get))
{
<div class="panel panel-primary panel-search">
    <div class="panel-heading">Search</div>
    <div class="panel-body">
        <div class="row">
            <div class="col-md-10 col-xs-12">
                <div class="col-sm-12 col-xs-12">
                    <label for="query" class="control-label">Search</label>
                    <div id="custom-search-input">
                        @Html.TextBox("query", Model.Filters.Query, new { @class = "form-control ", @placeholder = "Search" })
                    </div>
                </div>
                <div class="col-sm-3 col-xs-12">
                    <label for="minPrice" class="control-label">Min price (@ShopResources.CurrencyName)</label>
                    @Html.TextBox("minPrice", Model.Filters.MinPrice, new {@class = "form-control input-sm", @placeholder=string.Format("Min price ({0})", @ShopResources.CurrencyName), @type="Text"})
                </div>
                <div class="col-sm-3 col-xs-12">
                    <label for="maxPrice" class="control-label">Max price (@ShopResources.CurrencyName):</label>
                    @Html.TextBox("maxPrice", Model.Filters.MaxPrice, new {@class = "form-control input-sm", @placeholder=string.Format("Max price ({0})", @ShopResources.CurrencyName), @type="Text"})
                </div>
                <div class="col-sm-3 col-xs-12">
                    <label class="control-label">Order By:</label>
                    @Html.DropDownList("orderBy", new SelectList(orderBy, Model.Filters.OrderBy), new
                    {
                    onchange = "this.form.submit();",
                    @class = "form-control input-sm"
                    })
                </div>
                @*<div class="col-sm-3 col-xs-12">
                    <label class="control-label">Order:</label>
                    @Html.DropDownList("order", new SelectList(order, Model.Filters.Order), new
                    {
                    onchange = "this.form.submit();",
                    @class = "form-control input-sm"
                    })
                </div>*@
            </div>
            <div class="col-md-2 col-xs-12">
                <button class="btn btn-info btn-lg" type="submit">
                    <i class="glyphicon glyphicon-search"></i> Search
                </button>
            </div>
        </div>
    </div>
    <div class="panel-footer">
        Found: <span>@Model.Total</span> results
    </div>
</div>


<p>
    <div class="form-inline" id="ProductsPerPage">
        <div class="form-group">
            <span >Show</span>
            @Html.DropDownList("PageSize", new SelectList(itemsPerPage, Model.Filters.PageSize), new
            {
            onchange = "this.form.submit();",
            @class = "form-control input-sm"
            })
            <span >products per page</span>
        </div>
    </div>
</p>
}
<div class="products">
    @foreach (var product in Model.Products)
    {
    <div class="col-md-3 col-sm-4">
        <div class="thumbnail">
            <div style="position:relative">
                <div style="position:absolute">
                    <span class="label label-success">New</span>
                    <span class="label label-info">Discount</span>
                    <span class="label label-warning">Few left</span>
                    <span class="label label-danger">Prescription only</span>
                </div>
            </div>
            @*<img src="http://placehold.it/240x200/ffffff/bbbbbb" alt="">*@
            <img src="~/Content/site-images/no-product-image.png" />
            <hr />
            <div class="caption">
                <a href="@Url.Action("Details", new {id=product.PackageId})" title="@product.ProductNames.GetAllProductNames()"><h3 class="text-hidden-overflow">{{ '@product.ProductNames.GetFirstProductName()' | capitalize }}</h3></a>
                <p>
                    <span class="apoteka-icon-tablet-any"></span>
                    @* <!--other icons-->
                    <span class="apoteka-icon-tablet-partable"></span>
                    <span class="apoteka-icon-tablet-round"></span>
                    <span class="apoteka-icon-pill"></span>
                    <span class="apoteka-icon-liquid"></span>
                    <span class="apoteka-icon-spray"></span>
                    <span class="apoteka-icon-patch"></span>
                    <span class="apoteka-icon-powder"></span>
                    *@
                    <span style="font-weight:500">@product.NormalizedPackageSize.ToString("F0", CultureInfo.InvariantCulture) pcs</span>
                </p>
                <p>
                    @Html.Currency(product.NormalizedPrice)
                </p>

                <p>
                    <a href="#" ng-click="addOrder(@product.PackageId, $event)" class="btn btn-primary">Add to card</a>
                </p>

                <p class="btn-group">
                    <button class="btn btn-success">
                        @*<span class="glyphicon glyphicon-ok" aria-hidden="true"></span>*@
                        <span class="glyphicon glyphicon-hand-right" aria-hidden="true"></span>
                        <span>&nbsp;Checkout</span>
                    </button>
                    <button class="btn btn-default">
                        <span class="glyphicon glyphicon-plus"></span>
                        @*<span>1</span>*@
                    </button>
                    <button class="btn btn-default">
                        <span class="glyphicon glyphicon-trash"></span>
                    </button>
                </p>
            </div>

            @*<div class="caption">
                <a href="@Url.Action(" Details", new {id=product.PackageId})" title="@product.ProductNames.GetAllProductNames()"><h3 class="text-hidden-overflow">{{ '@product.ProductNames.GetFirstProductName()' | capitalize }}</h3></a>
                <p>
                    <span class="pull-right"></span>
                    <span>@product.NormalizedPackageSize.ToString("F2", CultureInfo.InvariantCulture) pcs</span>
                </p>

                <p class="input-group">
                    <span class="input-group-addon">@Html.Currency(product.NormalizedPrice)</span>
                    <span class="input-group-btn">
                        <a href="#" ng-click="addOrder(@product.PackageId, $event)" class="btn btn-primary">Add to card</a>
                    </span>
                </p>
            </div>*@

        </div>
    </div>
    }
</div>

<ul class="pagination">
    <li><a href="#">&larr; </a></li> <!-- need to hide if pages number is less or equal to 5 -->
    @for (var i = 0; i < Model.PageCount; i++)
    {
    if (i < 10)
    {
    <li>
        @PageLink(i + 1)
    </li>
    }
    }
    <li><a href="#">&rarr;</a></li> <!-- need to hide if pages number is less or equal to 5 -->
</ul>

@helper PageLink(int page)
{
    var filter = Model.Filters;

    filter.PageNumber = page;

    var routeParms = new RouteValueDictionary(filter.GetType().GetProperties().ToDictionary(p => p.Name, p => p.GetValue(Model.Filters, null)));

    @Html.ActionLink((page).ToString(), "Search", routeParms)
}

